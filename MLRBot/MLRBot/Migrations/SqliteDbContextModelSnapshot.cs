// <auto-generated />
using MLRBot.Resources.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MLRBot.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    partial class SqliteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("MLRBot.Resources.Database.Game", b =>
                {
                    b.Property<ulong>("GameID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NumberOfPitches");

                    b.Property<int>("StateOfGame");

                    b.HasKey("GameID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("MLRBot.Resources.Database.Participant", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AutoKs");

                    b.Property<int>("Doubles");

                    b.Property<int>("GuessNumber");

                    b.Property<int>("HomeRuns");

                    b.Property<int>("NumberOfGuesses");

                    b.Property<int>("Role");

                    b.Property<int>("Singles");

                    b.Property<int>("Strikeouts");

                    b.Property<int>("Triples");

                    b.Property<int>("Walks");

                    b.HasKey("UserId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("MLRBot.Resources.Database.Player", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AtBats");

                    b.Property<int>("AutoKs");

                    b.Property<int>("BatterType");

                    b.Property<int>("Doubles");

                    b.Property<int>("DoublesAllowed");

                    b.Property<int>("HomeRuns");

                    b.Property<int>("HomeRunsAllowed");

                    b.Property<int>("PitcherType");

                    b.Property<int>("PitchesThrown");

                    b.Property<int>("PlateAppearances");

                    b.Property<int>("Singles");

                    b.Property<int>("SinglesAllowed");

                    b.Property<int>("Strikeouts");

                    b.Property<int>("StrikeoutsGiven");

                    b.Property<int>("Triples");

                    b.Property<int>("TriplesAllowed");

                    b.Property<int>("Walks");

                    b.Property<int>("WalksAllowed");

                    b.HasKey("UserId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MLRBot.Resources.Database.Stone", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.HasKey("UserId");

                    b.ToTable("Stones");
                });
#pragma warning restore 612, 618
        }
    }
}
